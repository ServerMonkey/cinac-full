#!/bin/sh

# run from anywhere
APP_DIR_FULL=$(realpath "$0")
APP_DIR=$(dirname "$APP_DIR_FULL")
cd "$APP_DIR" || exit 1

# automatic increase minor version number whith each build
VERSION_FILE="version"
VERSION_MAJOR=$(sed -n '1p' $VERSION_FILE)
VERSION_MINOR=$(sed -n '2p' $VERSION_FILE)
VERSION_MINOR_NEW=$((1 + VERSION_MINOR))
sed -i "2 s/$VERSION_MINOR\$/$VERSION_MINOR_NEW/g" $VERSION_FILE
VERSION="$VERSION_MAJOR.$VERSION_MINOR_NEW"

# variables
NAME="cinac-full"
README="README.md"
RELEASES="releases"
TARGET="DEBIAN"
PATH_BASE="./$RELEASES/$NAME-$VERSION"
PATH_TARGET="$PATH_BASE/$TARGET"

# delete the old build
echo "Cleaning up old build"
rm -rf "$PATH_BASE"

# get description
DESCRIPTION=$(sed -n -e '1 s/^.*) -- //p' <"$README") || exit 1

# create Debian control file
echo "Creating CONTROL file"
mkdir -p "$PATH_TARGET"
echo "Package: $NAME
Version: $VERSION
Section: net
Priority: optional
Architecture: all
Depends: cinac, autokiosk, spice-web-client, nginx, pulseaudio
Maintainer: Bodo Endres <dev@muspekaren.se>
Description: $DESCRIPTION
" >"$PATH_TARGET/control"

# build
echo "Building"
fakeroot dpkg-deb --build "$PATH_BASE"

# pack source files
echo "Packing source"
zip -q -r "$RELEASES/$NAME-$VERSION.source.zip" ./* \
	-x $RELEASES\* \
	-x .*\* \
	-x ./*DEV_\*
wait

# replace latest version
cd "$RELEASES" || exit 1
ln -sf "$NAME-$VERSION.deb" "$NAME-LATEST.deb"
ln -sf "$NAME-$VERSION.source.zip" "$NAME-LATEST.source.zip"
cd "$APP_DIR" || exit 1

# clean up
echo "Clean up"
rm -rf "$PATH_BASE"

# check
echo "Checking:"
lintian -c "$PATH_BASE.deb"
